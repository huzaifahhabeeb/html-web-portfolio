:root {
    --color-accent: #5eead4;
    --color-highlight: #e2e8f0;
    --background-accent:rgba(45, 212, 191, .1);
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: 'Inter' , sans-serif;
}

html {
    scroll-behavior: smooth; /* any automated scrolling will be smooth */
}

p, h2 {
    /* font-size: 0.9rem; */
    line-height: 1.5rem;
}

p::selection,
h1::selection,
h2::selection,
h3::selection,
h4::selection,
h5::selection,
h6::selection {
    background: var(--color-accent);
    color: #0f172a;
}

body {
    background-color: #0f172a;
    color: #94a3b8;
    padding: 4rem 2rem;
    display: grid;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    gap: 6rem;
}

.underlay {
    position: fixed; /* always there basically */
    background: #172554;
    inset: 0; /* it takes up full screen */
    opacity: 0.15;
}

header,
main,
footer {
    position: relative;
    z-index: 10;
}

.social-link-container {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.social-link {
    font-size: 1.3rem;
    color: inherit; /* gives it the colour of the rest of the document */
    text-decoration: none;
}

.social-link:hover {
    color: var(--color-highlight);
}

nav a{
    font-size: 0.9rem;
}

nav {
    display: none;
}

header {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    max-width: 268px;
}

header h1,
header h4,
.light-text {
    color: var(--color-highlight);
}

header a {
    text-decoration: none;
}

header h1 {
    font-weight: 600; /* changes thickness */
}

header h4 {
    font-weight: 400;
}

main {
    display: flex;
    flex-direction: column;
    gap: 6rem; /* all 3 main sections have a 6rem gap now */
}

section {
    display: flex;
    flex-direction: column;
    gap: 2rem; /*  spaced out the h2 and paragraphs div */
}

section h2,
.experience-card h3 {
    text-transform: uppercase;
    font-size: 1rem;
    font-weight: 500;
}

.sticky-header {
    position: sticky;
    top: 0;
    padding: 1rem 0;
}

.sticky-header::before {
    content: '';
    position: absolute; /* has to have its parent element as position relative to stick to it */
    inset: 0; /* copies parent element's dimensions */
    background: #101a31; /* same background colour of page, but is its own little bar */
    opacity: 0.96; /* see through */
}

.sticky-header h2 {
    position: relative; /* has to be relative for this to work */
    z-index: 2; /* order of which things appear on top */
}

.about-contents {
    display: flex;
    flex-direction: column;
    gap: 1rem; /* spaced out the paragraphs */
}

.about-contents p {
    font-size: 1.1rem;
}

.experience-contents,
.project-contents {
    display: flex;
    flex-direction: column;
    gap: 4rem;
}

.experience-card,
.project-card {
    display: grid;
    grid-template-columns: repeat(1, minmax(0, 1fr));

}

.experience-card {
    gap: 0.5rem;
}

.project-card {
    gap: 1rem;
}

.card-column {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.anchor-text {
    color: var(--color-highlight);
    text-decoration: none; /* got rid of underline /
    transition-duration: 200ms; /* doesnt instantly change colour */
}

.anchor-text:hover {
    color: var(--color-accent);
}

.tenure {
    opacity: 0.7;
    font-size: 0.8rem;
    text-transform: uppercase;
}

.experience-card p{
    font-size: 0.9rem;
}

.card-header {
    font-size: 1rem;
    font-weight: 400;
}

.anchor-icon {
    padding-left: 0.3rem;
}

.tag-container {
    display: flex;
    flex-wrap: wrap;
    gap: 0.25rem 0.5rem;
    color: var(--color-accent);
}

.tag {
    padding: 0.25rem;
    border-radius: 0.5rem;
    background-color: var(--background-accent);
}

.tag p {
    font-size: 0.8rem;
    padding: 0.25rem 0.5rem;
}

.project-image-container {
    display: grid;
    place-items: center;
    max-width: 200px;
    overflow: hidden;
    aspect-ratio: 16 / 9;
    order: 2;
    border-radius: 0.25rem;
}

.project-image-container img {
    object-fit: cover; /* takes full container considering aspect ratio and crops accordingly */
    width: 100%;
    height: 100%;
}

.project-stat-link {
    display: flex;
    gap: 0.5rem;
    align-items: center;
    font-size: 0.8rem;
}

.project-archive-link {
    position: relative;
    color: var(--color-highlight);
    text-decoration: none; /* got rid of underline */
    transition-duration: 200ms; /* doesnt instantly change colour */
    margin-right: auto; /* only takes up necessary amount on right */
}

.project-archive-link span {
    transition-duration: 200ms; /* doesnt instantly change colour */
}

.project-archive-link:hover span {
    padding-left: 0.5rem; /* Bounces when hovering */

}

.project-archive-link::after {
    position: absolute; /* has to have its parent element as position relative to stick to it */
    content: ""; /* has to have something or else wont show */
    left: 0; /* starts at left */
    width: 100%; /* takes up full width of parent */
    bottom: 0; /* starts at bottom */
    height: 1.5px; 
    background-color: transparent; 
    transition-duration: 200ms; /* time for transition to take place */
}

.project-archive-link:hover::after {
    background-color: var(--color-accent);
}

footer {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    justify-content: space-between; /* pushes to edges of row */
    align-items: flex-start; /* pushes to start of container i.e the top here */
}

footer p {
    font-size: 0.9rem;
}

.scroll-to-top {
    text-decoration: none;
    background-color: var(--background-accent); 
    color: var(--color-accent);
    padding: 0 0.75rem;
    aspect-ratio: 1/1; /* makes it into a circle, not horizontal oval */
    display: grid; /* easiest way to center a single element */
    place-items: center; /* centers it inside the background */
    border-radius: 100%;
    overflow: hidden;
    transition-duration: 200ms;
}

.scroll-to-top:hover {
    opacity: 0.6;
}

@media (min-width:640px) {
    .project-card,
    .experience-card {
        grid-template-columns: repeat(4, minmax(0, 1fr)); /* changes it to make 4 columns */
    }

    .card-column {
        grid-column: span 3 / span 3; /* makes it take 3 columns */
    }

    .project-image-container {
        order: 0;
    }

    .social-link-container {
        gap: 1.5rem;
    }

    .social-link-container i {
        font-size: 2rem;
    }

    header {
        max-width: unset;
    }

    header h1 {
        font-size: 3rem;
    }

    header h4 {
        font-size: 1.4rem;
    }

    header p {
        max-width: 300px;
    }

}

@media (min-width:1024px) {
    body {
        grid-template-columns: repeat(2, minmax(0, 1fr));
        gap: 1rem; /* makes everything a bit more snug */
        padding: 6rem;
        padding-top: 0rem; /* needed to add this or else it has that extra gap before sticking */
    }

    header {
        position: sticky;
        top: 0;
        margin-left: auto; /* keeps it aligned */
        height: 100vh; /* makes the height only what the screen is, otherwise the sticky header wouldn't work */
        padding-bottom: 6rem;
    }

    header h1 {
        font-size: 3rem;
    }

    header h4 {
        font-size: 1.4rem;
    }

    header p {
        max-width: 300px;
    }

    nav {
        display: flex; /* was previously set to none */
        flex-direction: column;
        gap: 0.5rem;
        flex: 1; /* means it turns really greedy and takes up as much space as it can so pushes links to bottom */
    }

    nav a {
        font-size: 1.1rem;
    }

    .social-link-container {
        gap: 1.5rem;
    }

    .social-link-container i {
        font-size: 2rem;
    }
    
    header,
    main {
        padding-top: 6rem;
        max-width: 600px;
        width: 100%;
    }

    main {
        margin-right: auto; /* keeps it aligned */
    }

    .sticky-header {
        display: none;
    }

    footer {
        grid-column: span 2 / span 2; /* takes up both columns now */
        flex-direction: row;
        max-width: 1200px;
        margin: 0 auto; /* keeps it in middle */
        width: 100%;
    }
} 